ext.version = [
    kotlin: "1.3.41",
    appCompat: "1.1.0-rc01",
    constraintLayout: "1.1.3",
    recyclerView: "1.1.0-beta01",
    material: "1.1.0-alpha08",
    cardView: "1.0.0",
    coroutines: "1.3.0",
    moshi: "1.8.0",
    koin: "2.0.1",
    retrofit: "2.6.0",
    retrofitMoshi: "2.6.1",
    okHttpLogger: "3.12.0",
    androidArch: "2.1.0-rc01",
    picasso: "2.71828",
    arrow: "0.9.0",
    pullToRefresh: "1.0.0",
    coil: "0.6.1",
    browser: "1.0.0",
    customTabs: "2.0.0",
    room: "2.2.0-beta01",
    fragment: "1.1.0",

    jUnit: "4.12",
    jUnitExt: "1.1.1",
    testRunner: "1.3.0-alpha02",
    espresso: "3.3.0-alpha02",
    mockitoKotlin: "2.1.0",
    codacy: "6.0.4",
    assertK: "0.19",
    robolectric: "4.3",
    testCore: "1.2.1-alpha02",
    truth: "0.42",
    truthExt: "1.0.0"
]

def version = ext.version

ext.dependency = [
    kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${version.kotlin}",
    appCompat: "androidx.appcompat:appcompat:${version.appCompat}",
    constraintLayout: "androidx.constraintlayout:constraintlayout:${version.constraintLayout}",
    recyclerView: "androidx.recyclerview:recyclerview:${version.recyclerView}",
    material: "com.google.android.material:material:${version.material}",
    cardView: "androidx.cardview:cardview:${version.cardView}",
    coroutinesCore: "org.jetbrains.kotlinx:kotlinx-coroutines-core:${version.coroutines}",
    coroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${version.coroutines}",
    moshi: "com.squareup.moshi:moshi:${version.moshi}",
    koin: "org.koin:koin-android:${version.koin}",
    koinViewModel: "org.koin:koin-androidx-viewmodel:${version.koin}",
    retrofit: "com.squareup.retrofit2:retrofit:${version.retrofit}",
    retrofitMoshi: "com.squareup.retrofit2:converter-moshi:${version.retrofitMoshi}",
    okHttpLogger: "com.squareup.okhttp3:logging-interceptor:${version.okHttpLogger}",
    lifecycleCompiler: "android.arch.lifecycle:compiler:${version.androidArch}",
    lifecycleViewModel: "androidx.lifecycle:lifecycle-viewmodel-ktx:${version.androidArch}",
    picasso: "com.squareup.picasso:picasso:${version.picasso}",
    arrowCoreData: "io.arrow-kt:arrow-core-data:${version.arrow}",
    pullToRefresh: "androidx.swiperefreshlayout:swiperefreshlayout:${version.pullToRefresh}",
    coil: "io.coil-kt:coil:${version.coil}",
    browser: "androidx.browser:browser:${version.browser}",
    customTabs: "saschpe.android:customtabs:${version.customTabs}",
    room: "androidx.room:room-runtime:${version.room}",
    roomCompiler: "androidx.room:room-compiler:${version.room}",
    fragment: "androidx.fragment:fragment:${version.fragment}",
    fragmentKtx: "androidx.fragment:fragment-ktx:${version.fragment}",

    jUnit: "junit:junit:${version.jUnit}",
    jUnitExt: "androidx.test.ext:junit:${version.jUnitExt}",
    testRunner: "androidx.test:runner:${version.testRunner}",
    espressoCore: "androidx.test.espresso:espresso-core:${version.espresso}",
    espressoIntents: "androidx.test.espresso:espresso-intents:${version.espresso}",
    kotlinStdlib: "org.jetbrains.kotlin:kotlin-stdlib:${version.kotlin}",
    kotlinTestJunit: "org.jetbrains.kotlin:kotlin-test-junit:${version.kotlin}",
    mockitoKotlin: "com.nhaarman.mockitokotlin2:mockito-kotlin:${version.mockitoKotlin}",
    codacy: "com.github.codacy:codacy-coverage-reporter:${version.codacy}",
    assertK: "com.willowtreeapps.assertk:assertk-jvm:${version.assertK}",
    archCoreTesting: "android.arch.core:core-testing:${version.androidArch}",
    robolectric: "org.robolectric:robolectric:${version.robolectric}",
    testCore: "androidx.test:core:${version.testCore}",
    fragmentTesting: "androidx.fragment:fragment-testing:${version.fragment}",
    truth: "com.google.truth:truth:${version.truth}",
    truthExt: "androidx.test.ext:truth:${version.truthExt}"
]

def dependency = ext.dependency

ext.dataDependencies = [
    kotlin: "${dependency.kotlin}",
    moshi: "${dependency.moshi}",
    koin: "${dependency.koin}",
    retrofit: "${dependency.retrofit}",
    retrofitMoshi: "${dependency.retrofitMoshi}",
    okHttpLogger: "${dependency.okHttpLogger}",
    arrowCoreData: "${dependency.arrowCoreData}",
    coroutinesCore: "${dependency.coroutinesCore}",
    room: "${dependency.room}",
    roomCompiler: "${dependency.roomCompiler}"
]

ext.dataTestDependencies = [
    jUnit: "${dependency.jUnit}",
    jUnitExt: "${dependency.jUnitExt}",
    kotlinStdlib: "${dependency.kotlinStdlib}",
    kotlinTestJunit: "${dependency.kotlinTestJunit}",
    assertK: "${dependency.assertK}",
    mockitoKotlin: "${dependency.mockitoKotlin}"
]

ext.domainDependencies = [
    kotlin:"${dependency.kotlin}",
    coroutinesCore: "${dependency.coroutinesCore}",
    koin: "${dependency.koin}",
    arrowCoreData: "${dependency.arrowCoreData}"
]

ext.domainTestDependencies = [
    jUnit: "${dependency.jUnit}",
    jUnitExt: "${dependency.jUnitExt}",
    kotlinStdlib: "${dependency.kotlinStdlib}",
    kotlinTestJunit: "${dependency.kotlinTestJunit}",
    assertK: "${dependency.assertK}",
    mockitoKotlin: "${dependency.mockitoKotlin}"
]

ext.presentationDependencies = [
    kotlin:"${dependency.kotlin}",
    appCompat: "${dependency.appCompat}",
    constraintLayout: "${dependency.constraintLayout}",
    recyclerView: "${dependency.recyclerView}",
    material: "${dependency.material}",
    cardView: "${dependency.cardView}",
    koin: "${dependency.koin}",
    koinViewModel: "${dependency.koinViewModel}",
    moshi: "${dependency.moshi}",
    lifecycleCompiler: "${dependency.lifecycleCompiler}",
    lifecycleViewModel: "${dependency.lifecycleViewModel}",
    picasso: "${dependency.picasso}",
    arrowCoreData: "${dependency.arrowCoreData}",
    pullToRefresh: "${dependency.pullToRefresh}",
    coil: "${dependency.coil}",
    browser: "${dependency.browser}",
    customTabs: "${dependency.customTabs}",
    fragment: "${dependency.fragment}",
    fragmentKtx: "${dependency.fragmentKtx}"
]

ext.presentationTestDependencies = [
    jUnit: "${dependency.jUnit}",
    jUnitExt: "${dependency.jUnitExt}",
    testRunner: "${dependency.testRunner}",
    espressoCore: "${dependency.espressoCore}",
    espressoIntents: "${dependency.espressoIntents}",
    kotlinStdlib: "${dependency.kotlinStdlib}",
    kotlinTestJunit: "${dependency.kotlinTestJunit}",
    mockitoKotlin: "${dependency.mockitoKotlin}",
    assertK: "${dependency.assertK}",
    archCoreTesting: "${dependency.archCoreTesting}",
    robolectric: "${dependency.robolectric}",
    testCore: "${dependency.testCore}",
    fragmentTesting: "${dependency.fragmentTesting}",
    truth: "${dependency.truth}",
    truthExt: "${dependency.truthExt}"
]